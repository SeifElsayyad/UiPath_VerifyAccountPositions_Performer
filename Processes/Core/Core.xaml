<Activity mc:Ignorable="sap sap2010" x:Class="Core" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ss="clr-namespace:System.Security;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_PasswordCORE" Type="InArgument(ss:SecureString)" />
    <x:Property Name="in_USerNameCORE" Type="InArgument(x:String)" />
    <x:Property Name="In_ConfigCORE" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="out_BECORE" Type="OutArgument(ui:BusinessRuleException)" />
    <x:Property Name="out_SECORE" Type="OutArgument(s:Exception)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>System.ComponentModel</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Core" sap:VirtualizedContainerService.HintSize="927.6,4636.8" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Seq Core" sap:VirtualizedContainerService.HintSize="521.6,4613.6" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="488,4530.4" sap2010:WorkflowViewState.IdRef="TryCatch_1">
        <TryCatch.Try>
          <Sequence DisplayName="Try" sap:VirtualizedContainerService.HintSize="486.4,4186.4" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="ClientAmount" />
              <Variable x:TypeArguments="x:String" Name="ClientNumber" />
              <Variable x:TypeArguments="x:String" Name="ClientID" />
              <Variable x:TypeArguments="ui:QueueItem" Name="TransactionIteam" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="&quot;invoke open system 1&quot;" sap:VirtualizedContainerService.HintSize="452.8,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_2">
              <ui:LogMessage.Message>
                <InArgument x:TypeArguments="x:Object">
                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_5">"invoke open system 1......"</CSharpValue>
                </InArgument>
              </ui:LogMessage.Message>
            </ui:LogMessage>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="OpenAcmeSystem1 - Invoke Workflow File (Processes\\Core\\OpenAcmeSystem1.xaml)" sap:VirtualizedContainerService.HintSize="452.8,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Processes\\Core\\OpenAcmeSystem1.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="ss:SecureString" x:Key="in_Password">
                  <CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_6">in_PasswordCORE</CSharpValue>
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_UserName">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_7">in_USerNameCORE</CSharpValue>
                </InArgument>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                  <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_8">In_ConfigCORE</CSharpValue>
                </InArgument>
                <OutArgument x:TypeArguments="ui:BusinessRuleException" x:Key="out_BE">
                  <CSharpReference x:TypeArguments="ui:BusinessRuleException" sap2010:WorkflowViewState.IdRef="CSharpReference`1_3">out_BECORE</CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="s:Exception" x:Key="out_SE">
                  <CSharpReference x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpReference`1_4">out_SECORE</CSharpReference>
                </OutArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <If sap:VirtualizedContainerService.HintSize="452.8,56.8" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Condition>
                <InArgument x:TypeArguments="x:Boolean">
                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_9">out_BECORE!= null &amp;&amp; out_SECORE!=null</CSharpValue>
                </InArgument>
              </If.Condition>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,173.6" sap2010:WorkflowViewState.IdRef="Sequence_6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Throw sap:VirtualizedContainerService.HintSize="382.4,113.6" sap2010:WorkflowViewState.IdRef="Throw_1">
                    <InArgument x:TypeArguments="s:Exception">
                      <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_10">out_BECORE!=null ? out_BECORE: out_SECORE</CSharpValue>
                    </InArgument>
                  </Throw>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,89.6" sap2010:WorkflowViewState.IdRef="Sequence_7">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
            <ui:LogMessage DisplayName="&quot;invoke open system 1......is success&quot;" sap:VirtualizedContainerService.HintSize="452.8,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_3">
              <ui:LogMessage.Message>
                <InArgument x:TypeArguments="x:Object">
                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_11">"invoke open system 1......is success"</CSharpValue>
                </InArgument>
              </ui:LogMessage.Message>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:LogMessage>
            <ui:LogMessage DisplayName="&quot;invoke Transaction iteam Data...&quot;" sap:VirtualizedContainerService.HintSize="452.8,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_4">
              <ui:LogMessage.Message>
                <InArgument x:TypeArguments="x:Object">
                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_33">"invoke Transaction iteam Data..."</CSharpValue>
                </InArgument>
              </ui:LogMessage.Message>
            </ui:LogMessage>
            <ui:InterruptibleDoWhile CurrentIndex="{x:Null}" DisplayName="Do While" sap:VirtualizedContainerService.HintSize="452.8,3370.4" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_1">
              <ui:InterruptibleDoWhile.Body>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="451.2,3248.8" sap2010:WorkflowViewState.IdRef="Sequence_16">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Get Transaction iteam Data - Invoke Workflow File (Processes\\Core\\Get Transaction iteam Data.xaml)" sap:VirtualizedContainerService.HintSize="417.6,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_16" UnSafe="False" WorkflowFileName="Processes\\Core\\Get Transaction iteam Data.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                        <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_61">In_ConfigCORE</CSharpValue>
                      </InArgument>
                      <OutArgument x:TypeArguments="ui:BusinessRuleException" x:Key="out_BE">
                        <CSharpReference x:TypeArguments="ui:BusinessRuleException" sap2010:WorkflowViewState.IdRef="CSharpReference`1_46">out_BECORE</CSharpReference>
                      </OutArgument>
                      <OutArgument x:TypeArguments="s:Exception" x:Key="out_SE">
                        <CSharpReference x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpReference`1_47">out_SECORE</CSharpReference>
                      </OutArgument>
                      <OutArgument x:TypeArguments="ui:QueueItem" x:Key="out_TransactionIteam">
                        <CSharpReference x:TypeArguments="ui:QueueItem" sap2010:WorkflowViewState.IdRef="CSharpReference`1_48">TransactionIteam</CSharpReference>
                      </OutArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <If sap:VirtualizedContainerService.HintSize="417.6,56.8" sap2010:WorkflowViewState.IdRef="If_10">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_62">out_BECORE!= null &amp;&amp; out_SECORE!=null</CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,173.6" sap2010:WorkflowViewState.IdRef="Sequence_25">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Throw sap:VirtualizedContainerService.HintSize="382.4,113.6" sap2010:WorkflowViewState.IdRef="Throw_8">
                          <InArgument x:TypeArguments="s:Exception">
                            <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_63">out_BECORE!=null ? out_BECORE: out_SECORE</CSharpValue>
                          </InArgument>
                        </Throw>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,89.6" sap2010:WorkflowViewState.IdRef="Sequence_26">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Sequence>
                    </If.Else>
                  </If>
                  <ui:LogMessage DisplayName="&quot;invoke Transaction iteam Data...is sucesses&quot;" sap:VirtualizedContainerService.HintSize="417.6,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_15">
                    <ui:LogMessage.Message>
                      <InArgument x:TypeArguments="x:Object">
                        <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_64">"invoke Transaction iteam Data...is sucesses"</CSharpValue>
                      </InArgument>
                    </ui:LogMessage.Message>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:LogMessage>
                  <If sap:VirtualizedContainerService.HintSize="417.6,2781.6" sap2010:WorkflowViewState.IdRef="If_6">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_65">TransactionIteam != null</CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <If.Then>
                      <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,2544" sap2010:WorkflowViewState.IdRef="Sequence_17">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="WIID" />
                          <Variable x:TypeArguments="x:String" Name="ClientNumber" />
                          <Variable x:TypeArguments="x:String" Name="ClientAmount" />
                          <Variable x:TypeArguments="x:Decimal" Name="totalAmount" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:LogMessage DisplayName="&quot;invoke Extracted Data form WIID page....&quot;" sap:VirtualizedContainerService.HintSize="382.4,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_11">
                          <ui:LogMessage.Message>
                            <InArgument x:TypeArguments="x:Object">
                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_91">"invoke Extracted Data form WIID page...."</CSharpValue>
                            </InArgument>
                          </ui:LogMessage.Message>
                        </ui:LogMessage>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Extracted Data from WIID Page - Invoke Workflow File (Processes\\Core\\Extracted Data from WIID Page.xaml)" sap:VirtualizedContainerService.HintSize="382.4,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_20" UnSafe="False" WorkflowFileName="Processes\\Core\\Extracted Data from WIID Page.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionIteam">
                              <CSharpValue x:TypeArguments="ui:QueueItem" sap2010:WorkflowViewState.IdRef="CSharpValue`1_92">TransactionIteam</CSharpValue>
                            </InArgument>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                              <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_93">In_ConfigCORE</CSharpValue>
                            </InArgument>
                            <OutArgument x:TypeArguments="ui:BusinessRuleException" x:Key="out_BE">
                              <CSharpReference x:TypeArguments="ui:BusinessRuleException" sap2010:WorkflowViewState.IdRef="CSharpReference`1_61">out_BECORE</CSharpReference>
                            </OutArgument>
                            <OutArgument x:TypeArguments="s:Exception" x:Key="out_SE">
                              <CSharpReference x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpReference`1_62">out_SECORE</CSharpReference>
                            </OutArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="out_WIID">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_67">WIID</CSharpReference>
                            </OutArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="out_ClientID">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_64">ClientID</CSharpReference>
                            </OutArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="out_ClientNumber">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_65">ClientNumber</CSharpReference>
                            </OutArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="out_ClientAmount">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_66">ClientAmount</CSharpReference>
                            </OutArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <If sap:VirtualizedContainerService.HintSize="382.4,56.8" sap2010:WorkflowViewState.IdRef="If_8">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_51">out_BECORE!= null &amp;&amp; out_SECORE!=null</CSharpValue>
                            </InArgument>
                          </If.Condition>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,173.6" sap2010:WorkflowViewState.IdRef="Sequence_21">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Throw sap:VirtualizedContainerService.HintSize="382.4,113.6" sap2010:WorkflowViewState.IdRef="Throw_6">
                                <InArgument x:TypeArguments="s:Exception">
                                  <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_52">out_BECORE!=null ? out_BECORE: out_SECORE</CSharpValue>
                                </InArgument>
                              </Throw>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,89.6" sap2010:WorkflowViewState.IdRef="Sequence_22">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Sequence>
                          </If.Else>
                        </If>
                        <ui:LogMessage DisplayName="&quot;invoke Extracted Data form WIID page....is sucesses&quot;" sap:VirtualizedContainerService.HintSize="382.4,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_22">
                          <ui:LogMessage.Message>
                            <InArgument x:TypeArguments="x:Object">
                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_94">"invoke Extracted Data form WIID page....is sucesses"</CSharpValue>
                            </InArgument>
                          </ui:LogMessage.Message>
                        </ui:LogMessage>
                        <ui:LogMessage DisplayName="&quot;invoke open ACME system 3..... &quot;" sap:VirtualizedContainerService.HintSize="382.4,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_16">
                          <ui:LogMessage.Message>
                            <InArgument x:TypeArguments="x:Object">
                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_68">"invoke open ACME system 3..... "</CSharpValue>
                            </InArgument>
                          </ui:LogMessage.Message>
                        </ui:LogMessage>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="OpenSystem3 - Invoke Workflow File (Processes\\Core\\OpenSystem3.xaml)" sap:VirtualizedContainerService.HintSize="382.4,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_17" UnSafe="False" WorkflowFileName="Processes\\Core\\OpenSystem3.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                              <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_69">In_ConfigCORE</CSharpValue>
                            </InArgument>
                            <OutArgument x:TypeArguments="ui:BusinessRuleException" x:Key="out_BE">
                              <CSharpReference x:TypeArguments="ui:BusinessRuleException" sap2010:WorkflowViewState.IdRef="CSharpReference`1_53">out_BECORE</CSharpReference>
                            </OutArgument>
                            <OutArgument x:TypeArguments="s:Exception" x:Key="out_SE">
                              <CSharpReference x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpReference`1_54">out_SECORE</CSharpReference>
                            </OutArgument>
                            <InArgument x:TypeArguments="ss:SecureString" x:Key="in_PassWord">
                              <CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_70">in_PasswordCORE</CSharpValue>
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_UserName">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_71">in_USerNameCORE</CSharpValue>
                            </InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <If sap:VirtualizedContainerService.HintSize="382.4,56.8" sap2010:WorkflowViewState.IdRef="If_11">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_72">out_BECORE!= null &amp;&amp; out_SECORE!=null</CSharpValue>
                            </InArgument>
                          </If.Condition>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,173.6" sap2010:WorkflowViewState.IdRef="Sequence_27">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Throw sap:VirtualizedContainerService.HintSize="382.4,113.6" sap2010:WorkflowViewState.IdRef="Throw_9">
                                <InArgument x:TypeArguments="s:Exception">
                                  <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_73">out_BECORE!=null ? out_BECORE: out_SECORE</CSharpValue>
                                </InArgument>
                              </Throw>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,89.6" sap2010:WorkflowViewState.IdRef="Sequence_28">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Sequence>
                          </If.Else>
                        </If>
                        <ui:LogMessage DisplayName="&quot;invoke open ACME system 3.....is sucesses &quot;" sap:VirtualizedContainerService.HintSize="382.4,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_17">
                          <ui:LogMessage.Message>
                            <InArgument x:TypeArguments="x:Object">
                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_74">"invoke open ACME system 3.....is sucesses "</CSharpValue>
                            </InArgument>
                          </ui:LogMessage.Message>
                        </ui:LogMessage>
                        <ui:LogMessage DisplayName="&quot;invoke process Data...&quot;" sap:VirtualizedContainerService.HintSize="382.4,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_18">
                          <ui:LogMessage.Message>
                            <InArgument x:TypeArguments="x:Object">
                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_75">"invoke process Data..."</CSharpValue>
                            </InArgument>
                          </ui:LogMessage.Message>
                        </ui:LogMessage>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ProcessesDataInACME3 - Invoke Workflow File (Processes\\Core\\ProcessesDataInACME3.xaml)" sap:VirtualizedContainerService.HintSize="382.4,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_18" UnSafe="False" WorkflowFileName="Processes\\Core\\ProcessesDataInACME3.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                              <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_76">In_ConfigCORE</CSharpValue>
                            </InArgument>
                            <OutArgument x:TypeArguments="ui:BusinessRuleException" x:Key="out_BE">
                              <CSharpReference x:TypeArguments="ui:BusinessRuleException" sap2010:WorkflowViewState.IdRef="CSharpReference`1_56">out_BECORE</CSharpReference>
                            </OutArgument>
                            <OutArgument x:TypeArguments="s:Exception" x:Key="out_SE">
                              <CSharpReference x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpReference`1_57">out_SECORE</CSharpReference>
                            </OutArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_AccountNumber">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_77">ClientNumber</CSharpValue>
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_ClientID">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_78">ClientID</CSharpValue>
                            </InArgument>
                            <OutArgument x:TypeArguments="x:Decimal" x:Key="out_totalAmount">
                              <CSharpReference x:TypeArguments="x:Decimal" sap2010:WorkflowViewState.IdRef="CSharpReference`1_58">totalAmount</CSharpReference>
                            </OutArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <If sap:VirtualizedContainerService.HintSize="382.4,56.8" sap2010:WorkflowViewState.IdRef="If_12">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_79">out_BECORE!= null &amp;&amp; out_SECORE!=null</CSharpValue>
                            </InArgument>
                          </If.Condition>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,173.6" sap2010:WorkflowViewState.IdRef="Sequence_29">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Throw sap:VirtualizedContainerService.HintSize="382.4,113.6" sap2010:WorkflowViewState.IdRef="Throw_10">
                                <InArgument x:TypeArguments="s:Exception">
                                  <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_80">out_BECORE!=null ? out_BECORE: out_SECORE</CSharpValue>
                                </InArgument>
                              </Throw>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,89.6" sap2010:WorkflowViewState.IdRef="Sequence_30">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Sequence>
                          </If.Else>
                        </If>
                        <ui:LogMessage DisplayName="&quot;invoke process Data...is sucesses&quot;" sap:VirtualizedContainerService.HintSize="382.4,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_19">
                          <ui:LogMessage.Message>
                            <InArgument x:TypeArguments="x:Object">
                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_81">"invoke process Data...is sucesses"</CSharpValue>
                            </InArgument>
                          </ui:LogMessage.Message>
                        </ui:LogMessage>
                        <ui:LogMessage DisplayName="&quot;invoke Compere between Acme System...&quot;" sap:VirtualizedContainerService.HintSize="382.4,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_20">
                          <ui:LogMessage.Message>
                            <InArgument x:TypeArguments="x:Object">
                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_82">"invoke Compere between Acme System..."</CSharpValue>
                            </InArgument>
                          </ui:LogMessage.Message>
                        </ui:LogMessage>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Compersion Between Acme3 and Acme1 - Invoke Workflow File (Processes\\Core\\Compersion Between Acme3 and Acme1.xaml)" sap:VirtualizedContainerService.HintSize="382.4,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_19" UnSafe="False" WorkflowFileName="Processes\\Core\\Compersion Between Acme3 and Acme1.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:Decimal" x:Key="in_dtAmount">
                              <CSharpValue x:TypeArguments="x:Decimal" sap2010:WorkflowViewState.IdRef="CSharpValue`1_87">totalAmount</CSharpValue>
                            </InArgument>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                              <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_84">In_ConfigCORE</CSharpValue>
                            </InArgument>
                            <OutArgument x:TypeArguments="ui:BusinessRuleException" x:Key="out_BE">
                              <CSharpReference x:TypeArguments="ui:BusinessRuleException" sap2010:WorkflowViewState.IdRef="CSharpReference`1_59">out_BECORE</CSharpReference>
                            </OutArgument>
                            <OutArgument x:TypeArguments="s:Exception" x:Key="out_SE">
                              <CSharpReference x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpReference`1_60">out_SECORE</CSharpReference>
                            </OutArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_ClientAmount">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_85">ClientAmount</CSharpValue>
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_WIID">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_86">WIID</CSharpValue>
                            </InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <If sap:VirtualizedContainerService.HintSize="382.4,56.8" sap2010:WorkflowViewState.IdRef="If_13">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_88">out_BECORE!= null &amp;&amp; out_SECORE!=null</CSharpValue>
                            </InArgument>
                          </If.Condition>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,173.6" sap2010:WorkflowViewState.IdRef="Sequence_31">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Throw sap:VirtualizedContainerService.HintSize="382.4,113.6" sap2010:WorkflowViewState.IdRef="Throw_11">
                                <InArgument x:TypeArguments="s:Exception">
                                  <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_89">out_BECORE!=null ? out_BECORE: out_SECORE</CSharpValue>
                                </InArgument>
                              </Throw>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,89.6" sap2010:WorkflowViewState.IdRef="Sequence_32">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Sequence>
                          </If.Else>
                        </If>
                        <ui:LogMessage DisplayName="&quot;invoke Compere between Acme System...is sucesses&quot;" sap:VirtualizedContainerService.HintSize="382.4,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_21">
                          <ui:LogMessage.Message>
                            <InArgument x:TypeArguments="x:Object">
                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_90">"invoke Compere between Acme System...is sucesses"</CSharpValue>
                            </InArgument>
                          </ui:LogMessage.Message>
                        </ui:LogMessage>
                        <ui:KillProcess AppliesTo="{x:Null}" ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="382.4,157.6" sap2010:WorkflowViewState.IdRef="KillProcess_1" ProcessName="ACME-System3" />
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,108" sap2010:WorkflowViewState.IdRef="Sequence_18">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:Break sap:VirtualizedContainerService.HintSize="382.4,48" sap2010:WorkflowViewState.IdRef="Break_1" />
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </ui:InterruptibleDoWhile.Body>
              <ui:InterruptibleDoWhile.Condition>
                <Literal x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="Literal`1_1" Value="True" />
              </ui:InterruptibleDoWhile.Condition>
            </ui:InterruptibleDoWhile>
          </Sequence>
        </TryCatch.Try>
        <TryCatch.Catches>
          <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
            <ActivityAction x:TypeArguments="s:Exception">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="486.4,89.6" sap2010:WorkflowViewState.IdRef="Sequence_5">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Sequence>
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
        <TryCatch.Finally>
          <Sequence DisplayName="Finally" sap:VirtualizedContainerService.HintSize="486.4,89.6" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Sequence>
        </TryCatch.Finally>
      </TryCatch>
    </Sequence>
  </Sequence>
</Activity>